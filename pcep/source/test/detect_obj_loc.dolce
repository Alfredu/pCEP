/*
 * Copyright (C) 2019  Atos Spain SA. All rights reserved.
 *
 * This file is part of pCEP.
 *
 * pCEP is free software: you can redistribute it and/or modify it under the
 * terms of the Apache License, Version 2.0 (the License);
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * The software is provided "AS IS", without any warranty of any kind, express or implied,
 * including but not limited to the warranties of merchantability, fitness for a particular
 * purpose and noninfringement, in no event shall the authors or copyright holders be
 * liable for any claim, damages or other liability, whether in action of contract, tort or
 * otherwise, arising from, out of or in connection with the software or the use or other
 * dealings in the software.
 *
 * See README file for the full disclaimer information and LICENSE file for full license
 * information in the project root.
 *
 * Authors:  Atos Research and Innovation, Atos SPAIN SA
 */

event obj_loc
{
/*
	use
	{
		int obj_id,
		string type, 	// "vehicle", "cat", "pedestrian", "other", ...
		float loc_x,		
		float loc_y,
		float t 		// time: leave as float, or use a time type?
	};
*/

	use
	{
		int obj_id, 
		string type, 
		float loc_x, 
		float loc_y, 
		float t, 
		float truth_x, 
		float truth_y, 
		float truth_vx, 
		float truth_vy
	};

//	accept { type == "vehicle" };

	accept { type == "L" };
//	accept { obj_id == 1 };
}

// 1 obj_loc int obj_id 1 string type vehicle float loc_x 4 float loc_y 1 float t 14770104432
// 1 obj_loc int obj_id 1 string type L float loc_x 0.3122 float loc_y 0.5803 float t 14770104430000 float truth_x 0.6 float truth_y 0.6 float truth_vx 5.1999 float truth_vy 0 

complex collision_with_moving_object
{
//	detect obj_loc where traj(loc_x, loc_y) == 1 in [2];
	detect obj_loc where coll(loc_x) == 1 in [2];
//	detect obj_loc where traj(loc_x) == 1 in [2];
}


/*
complex collision_with_static_object
complex collision_with_moving_object
complex collision_with_this_vehicle
*/

